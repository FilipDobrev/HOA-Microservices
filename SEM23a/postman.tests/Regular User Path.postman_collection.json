{
	"info": {
		"_postman_id": "d8c8bfe4-07ed-4bfa-9cae-d51aa4db3f95",
		"name": "Regular User Path",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.be.success;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"SomeUser\",\r\n    \"password\": \"passss\",\r\n    \"email\": \"SomeEmail@real.nl\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Second User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.be.success;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"SecondUser\",\r\n    \"password\": \"pas\",\r\n    \"email\": \"realMail@true.bg\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Already Existing User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check correct 'Already Taken' response\", function () {\r",
							"    var bodyText = pm.response.text();\r",
							"    pm.expect(bodyText).to.include(\"SomeUser is already taken!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"SomeUser\",\r\n    \"password\": \"passss\",\r\n    \"email\": \"SomeEmail@real.nl\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response body as a JSON object\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"// Extract the value of the \"token\" field\r",
							"var token = jsonData.token;\r",
							"\r",
							"// Set the value as an environment variable\r",
							"pm.collectionVariables.set(\"auth_token\", token);\r",
							"\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"SomeUser\",\r\n    \"password\": \"passss\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Second User Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response body as a JSON object\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"// Extract the value of the \"token\" field\r",
							"var tokenS = jsonData.token;\r",
							"\r",
							"// Set the value as an environment variable\r",
							"pm.collectionVariables.set(\"second_token\", tokenS);\r",
							"\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"SecondUser\",\r\n    \"password\": \"pas\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Wrong login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function() {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"SomeUser\",\r\n    \"password\": \"pas\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Hoa",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.be.success;\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"var idValue = jsonData.id;\r",
							"\r",
							"pm.test(\"This is the first hoa created\", function() {\r",
							"    pm.expect(idValue).to.equal(1);\r",
							"});\r",
							"\r",
							"console.log(jsonData);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"RealHoa\",\r\n    \"country\": \"Bulgaria\",\r\n    \"city\": \"Sofia\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/hoa/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"hoa",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Join Hoa",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is success\", function() {\r",
							"    pm.response.to.be.success;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"country\": \"Bulgaria\",\r\n    \"city\": \"Sofia\",\r\n    \"postalCode\": \"1612\",\r\n    \"street\": \"Smolyanska\",\r\n    \"houseNumber\": 27\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/hoa/join/1/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"hoa",
						"join",
						"1",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Second User Join Hoa",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is success\", function() {\r",
							"    pm.response.to.be.success;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{second_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"country\": \"Bulgaria\",\r\n    \"city\": \"Sofia\",\r\n    \"postalCode\": \"1612\",\r\n    \"street\": \"Smolyanska\",\r\n    \"houseNumber\": 28\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/hoa/join/1/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"hoa",
						"join",
						"1",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Join When Already In",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is forbidden\", function() {\r",
							"    pm.response.to.be.forbidden;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"country\": \"Bulgaria\",\r\n    \"city\": \"Sofia\",\r\n    \"postalCode\": \"1612\",\r\n    \"street\": \"Smolyanska\",\r\n    \"houseNumber\": 27\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/hoa/join/1/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"hoa",
						"join",
						"1",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Join Non existent Hoa",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is not found\", function() {\r",
							"    pm.response.to.be.notFound;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"country\": \"Bulgaria\",\r\n    \"city\": \"Sofia\",\r\n    \"postalCode\": \"1612\",\r\n    \"street\": \"Smolyanska\",\r\n    \"houseNumber\": 27\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/hoa/join/666/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"hoa",
						"join",
						"666",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.be.success;\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"var idValue = jsonData.id;\r",
							"\r",
							"pm.test(\"This is the first hoa created\", function() {\r",
							"    pm.expect(idValue).to.equal(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"hoaId\": \"1\",\r\n    \"description\": \"Gathering to have fun\",\r\n    \"type\": \"GATHERING\",\r\n    \"days\": \"7\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8084/activities",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8084",
					"path": [
						"activities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Noticeboard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody)\r",
							"\r",
							"pm.test(\"assertLength\", function(){\r",
							"    pm.expect(jsonData.length).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/hoa/notice-board/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"hoa",
						"notice-board",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "React to Gathering",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is success\", function() {\r",
							"    pm.response.to.be.success;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{second_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"choice\": \"Going\",\r\n    \"username\": \"SecondUser\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8084/activities/hoa/1/gatherings/2/vote",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8084",
					"path": [
						"activities",
						"hoa",
						"1",
						"gatherings",
						"2",
						"vote"
					]
				}
			},
			"response": []
		},
		{
			"name": "Gathering Results",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is success\", function() {\r",
							"    pm.response.to.be.success;\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody)\r",
							"\r",
							"pm.test(\"assert 1 going\", function() {\r",
							"    pm.expect(jsonData.reactions[0]).to.eql(\"Going: 1\")\r",
							"});\r",
							"\r",
							"pm.test(\"assert Description\", function() {\r",
							"    pm.expect(jsonData.description).to.eql(\"Gathering to have fun\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "http://localhost:8084/activities/hoa/1/gatherings/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8084",
					"path": [
						"activities",
						"hoa",
						"1",
						"gatherings",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Empty board Members",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is success\", function() {\r",
							"    pm.response.to.be.success;\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody)\r",
							"\r",
							"pm.test(\"assert Description\", function() {\r",
							"    pm.expect(jsonData.boardMembers.length).to.eql(0)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{second_token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "http://localhost:8083/hoa/1/board",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"hoa",
						"1",
						"board"
					]
				}
			},
			"response": []
		},
		{
			"name": "Apply for Election",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 2xx\", function() {\r",
							"    pm.response.to.be.success;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"choice\": \"Yes\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/hoa/1/election/apply",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"hoa",
						"1",
						"election",
						"apply"
					]
				}
			},
			"response": []
		},
		{
			"name": "Second User Vote",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 2xx\", function() {\r",
							"    pm.response.to.be.success;\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function sendRequest() {\r",
							"  pm.sendRequest();\r",
							"}\r",
							"\r",
							"setTimeout(sendRequest, 60000); // Delay for 1 minute (60000 milliseconds)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{second_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"choice\": \"SomeUser\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/hoa/1/election/vote",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"hoa",
						"1",
						"election",
						"vote"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check New Board Members",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function sendRequest() {\r",
							"  pm.sendRequest();\r",
							"}\r",
							"\r",
							"setTimeout(sendRequest, 60000); // Delay for 1 minute (60000 milliseconds)\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 2xx\", function() {\r",
							"    pm.response.to.be.success;\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody)\r",
							"\r",
							"pm.test(\"Assert 1 board member\", function() {\r",
							"    pm.expect(jsonData.boardMembers.length).to.eql(1)\r",
							"});\r",
							"\r",
							"pm.test(\"Assert SomeUser is a Board member\", function() {\r",
							"    pm.expect(jsonData.boardMembers[0]).to.eql(\"SomeUser\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "http://localhost:8083/hoa/1/board",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"hoa",
						"1",
						"board"
					]
				}
			},
			"response": []
		},
		{
			"name": "Leave Hoa",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.be.success;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "http://localhost:8083/hoa/leave/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"hoa",
						"leave",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Leave When Not In",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Expected not found\", function() {\r",
							"    pm.response.to.be.notFound;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "default"
					}
				],
				"url": {
					"raw": "http://localhost:8083/hoa/leave/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"hoa",
						"leave",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Noticeboard When Left",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"assertLength\", function(){\r",
							"    var bodyText = pm.response.text();\r",
							"    pm.expect(bodyText).to.include(\"This noticeboard is not accessible by you!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/hoa/notice-board/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"hoa",
						"notice-board",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.environment.get(\"variable_key\");",
					"pm.environment.set(\"variable_key\", \"variable_value\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "auth_token",
			"value": ""
		},
		{
			"key": "second_token",
			"value": ""
		}
	]
}